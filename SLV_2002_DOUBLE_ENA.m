function [Sa_3 sigma_3] = SLV_2002_DOUBLE_ENA(M, T, Rcd)
% by Rocio Segura, 18/10/2016
%
% Implements GMPE developed by Walter Silva, Nick Gregor and Robert Darragh
% and documented in “Development of regional hard rock attenuation relations for
% central and eastern north America” (2002).

%No site parameters are needed. The GMPE was developed for hard-rock site
% with Vs30 >= 2000 m/s (NEHRP site class A) only.
% HARD ROCK REGRESSION COEFFICIENTS FOR THE DOUBLE CORNER MODEL  - Table 6
%
%**************************************************************************
%--------------------------INPUT VARIABLES---------------------------------
% M      = moment magnitude
% T      = period (s); 
% Rcd    = closest distance to fault (km)
%
%--------------------------OUTPUT VARIABLES--------------------------------
% Sa    = median spectral acceleration prediction (g)
% sigma = logarithmic standard deviation of spectral acceleration
%         prediction (g)
%**************************************************************************

%----------------------COEFFICIENTS FOR ROCK SITES ------------------------
% Table of coefficients were provided by Table 2.
period = [10.000	5.000	3.000	2.000	1.600	1.000	0.750	0.500	0.400	0.300	0.240	0.200	0.160	0.150	0.120	0.100	0.080	0.070	0.060	0.055	0.050	0.040	0.032	0.025	0.020	0.010 999 998]';
  
cr = [-17.74463 2.22485 2.10000 0.00000 -1.40084 0.05305 0.00000 -0.31641 0.41990 1.34290
-13.88893 1.89859 2.30000 0.00000 -1.54772 0.06068 0.00000 -0.28960 0.45290 1.22280
-11.04809 1.64665 2.40000 0.00000 -1.70010 0.07272 0.00000 -0.22943 0.48870 1.08710
-8.76880 1.45200 2.50000 0.00000 -1.86494 0.08722 0.00000 -0.18125 0.52170 1.00950
-7.68301 1.34978 2.50000 0.00000 -1.94573 0.09603 0.00000 -0.16127 0.53880 0.94500
-5.47019 1.12590 2.60000 0.00000 -2.13473 0.11710 0.00000 -0.13830 0.56970 0.87390
-3.7735  0.98718 2.60000 0.00000 -2.28113 0.13007 0.00000 -0.13323 0.58440 0.88150
-0.19597 0.80810 2.60000 0.00000 -2.41132 0.14449 0.00000 -0.12529 0.60160 0.84260
-0.96872 0.71370 2.60000 0.00000 -2.46500 0.15003 0.00000 -0.11749 0.61100 0.83200
0.10920	0.59537	2.60000	0.00000	-2.54120 0.15808 0.00000 -0.10506 0.62310 0.83580
0.86777	0.52085	2.60000	0.00000	-2.58506 0.16235 0.00000 -0.09484 0.63260 0.82720
1.42831	0.46988	2.60000	0.00000	-2.61380 0.16486 0.00000 -0.08671 0.64120 0.82600
1.99361	0.41219	2.70000	0.00000	-2.65510 0.16868 0.00000 -0.07801 0.65350 0.82900
2.14018	0.39715	2.70000	0.00000	-2.66676 0.16973 0.00000 -0.0757  0.65870 0.83390
2.60454	0.35667	2.70000	0.00000	-2.69972 0.17238 0.00000 -0.06929 0.67170 0.84850
3.30684	0.30373	2.70000	0.00000	-2.79751 0.17893 0.00000 -0.06512 0.68370 0.84680
3.62400	0.27369	2.70000	0.00000	-2.83163 0.18170 0.00000 -0.06128 0.69230 0.84760
3.77510	0.25773	2.80000	0.00000	-2.85226 0.18339 0.00000 -0.05952 0.69820 0.85210
3.92454	0.24169	2.80000	0.00000	-2.87495 0.18521 0.00000 -0.05791 0.70580 0.86020
3.99907	0.23357	2.80000	0.00000	-2.88734 0.18619 0.00000 -0.05717 0.71060 0.86040
4.07670	0.22547	2.80000	0.00000	-2.90040 0.18720 0.00000 -0.0564  0.71650 0.86750
4.69293	0.18262	2.80000	0.00000	-3.00672 0.19396 0.00000 -0.05520 0.73390 0.87950
4.86717	0.17018	2.80000	0.00000	-3.03252 0.19560 0.00000 -0.05434 0.74620 0.88690
5.03119	0.15779	2.90000	0.00000	-3.06134 0.19746 0.00000 -0.05377 0.75340 0.89020
5.06834	0.14806	2.90000	0.00000	-3.08409 0.19935 0.00000 -0.05361 0.75610 0.89390
3.74623	0.18152	2.70000	0.00000	-2.98867 0.19854 0.00000 -0.05734 0.69940 0.84680
4.06989 0.46794 2.50000 0.0000 -2.77481 0.19743 0.00000 -0.07606 0.5582 NaN
3.54103 0.18904 2.70000 0.0000 -2.97418 0.19819 0.0000 -0.05814 0.6912 0.8400];   
  

%**************************************************************************
% FIND C COEFFICIENTS BY INTERPOLATING BETWEEN PERDIODS
%**************************************************************************
ilow = max(find(period<=T));
T_low = period(ilow);
ihigh = min(find(period>=T));
T_high = period(ihigh);
% if given period equals a period in the table, then no need to interpolate
if ihigh==ilow
        c = cr(ihigh,:);
% otherwise, interpolate between coeffients
else
        c_high = cr(ihigh,:);
        c_low = cr(ilow,:);
    for i=1:length(c_high)
        c(i) = interp1([T_low T_high], [c_low(i) c_high(i)], T);
    end
end
%**************************************************************************
% COMPUTE LOG MEAN SPECTRAL ACCELERAION
%**************************************************************************
logSa = c(1) + c(2)*M +(c(5) + c(6)*M)*log(Rcd+exp(c(3))) + c(8)*(M-6)^2; 

%**************************************************************************
% CONVERT SPECTRAL ACCELERATION FROM LOG SCALE
%**************************************************************************
Sa_3 = (exp(logSa));
%**************************************************************************
% DEFINE SIGMA Parametric
%**************************************************************************
 sigma_p = c(9);   
%**************************************************************************
% DEFINE SIGMA TOTAL
% c10 corresponds to sigma_Reg
%**************************************************************************
if T==999
   sigma_3=sigma_p;
else
sigma_3=c(10);
end